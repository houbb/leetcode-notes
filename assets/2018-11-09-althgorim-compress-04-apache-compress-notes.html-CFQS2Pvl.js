import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as t}from"./app-DJ0lVsKS.js";const r={};function p(n,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="存档和压缩器" tabindex="-1"><a class="header-anchor" href="#存档和压缩器"><span>存档和压缩器</span></a></h1><p>Commons Compress调用压缩单个数据压缩器格式流的所有格式，而在单个（可能压缩的）存档中收集多个条目的所有格式都是归档格式。</p><p>支持的压缩器格式有gzip，bzip2，xz，lzma，Pack200，DEFLATE，Brotli，DEFLATE64，ZStandard和Z。</p><p>归档格式为7z，ar，arj，cpio，dump，tar和zip。</p><p>Pack200是一种特殊情况，因为它只能压缩JAR文件。</p><p>我们目前只为arj，dump，Brotli，DEFLATE64和Z提供读取支持.arj只能读取未压缩的档案，7z可以读取具有7z支持的许多压缩和加密算法的档案，但在编写档案时不支持加密。</p><h1 id="缓冲" tabindex="-1"><a class="header-anchor" href="#缓冲"><span>缓冲</span></a></h1><p>流类都包含调用代码提供的流，它们直接处理它们而无需任何额外的缓冲。</p><p>另一方面，大多数都将受益于缓冲，因此强烈建议用户在使用Commons Compress API之前将其流包装在Buffered（In | Out）putStream中。</p><h1 id="工厂" tabindex="-1"><a class="header-anchor" href="#工厂"><span>工厂</span></a></h1><p>Compress 提供了工厂方法，可以根据压缩器或归档器格式的名称以及尝试猜测输入流格式的工厂方法来创建输入/输出流。</p><p>要使用算法名称创建写入给定输出的压缩器：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">CompressorOutputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> gzippedOut </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CompressorStreamFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createCompressorOutputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">CompressorStreamFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">GZIP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, myOutputStream);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>让工厂猜测给定归档流的输入格式：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ArchiveInputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> input </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ArchiveStreamFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createArchiveInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(originalInput);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>让工厂猜测给定压缩器流的输入格式：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">CompressorInputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> input </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CompressorStreamFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createCompressorInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(originalInput);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，无法检测lzma或Brotli格式，因此只能使用createCompressorInputStream的两个arg版本。</p><p>在压缩1.9之前，还没有自动检测.Z格式。</p><h1 id="限制内存使用" tabindex="-1"><a class="header-anchor" href="#限制内存使用"><span>限制内存使用</span></a></h1><p>从Compress 1.14开始CompressorStreamFactory有一个可选的构造函数参数，可用于设置解压缩或压缩流时可能使用的内存上限。</p><p>从1.14开始，此设置仅影响解压缩Z，XZ和LZMA压缩流。</p><p>对于Snappy和LZ4格式，压缩期间使用的内存量与窗口大小成正比。</p><h1 id="统计" tabindex="-1"><a class="header-anchor" href="#统计"><span>统计</span></a></h1><p>从Compress 1.17开始，大多数CompressorInputStream实现以及ZipArchiveInputStream和ZipFile.getInputStream返回的所有流都实现了InputStreamStatistics接口。</p><p>SevenZFile通过getStatisticsForCurrentEntry方法提供当前条目的统计信息。</p><p>该接口可用于在提取流时跟踪进度或在压缩比变得可疑时检测潜在的拉链炸弹。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="http://commons.apache.org/proper/commons-compress/examples.html" target="_blank" rel="noopener noreferrer">commons-compress</a></p>`,29)]))}const l=i(r,[["render",p]]),m=JSON.parse('{"path":"/posts/algorithm/compress/2018-11-09-althgorim-compress-04-apache-compress-notes.html","title":"Compress Althgorim-04-Common Compress 通用笔记","lang":"zh-CN","frontmatter":{"title":"Compress Althgorim-04-Common Compress 通用笔记","date":"2018-11-09T00:00:00.000Z","categories":["Althgorim"],"tags":["althgorim","compress","sh"],"published":true,"description":"存档和压缩器 Commons Compress调用压缩单个数据压缩器格式流的所有格式，而在单个（可能压缩的）存档中收集多个条目的所有格式都是归档格式。 支持的压缩器格式有gzip，bzip2，xz，lzma，Pack200，DEFLATE，Brotli，DEFLATE64，ZStandard和Z。 归档格式为7z，ar，arj，cpio，dump，ta...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/leetcode-notes/posts/algorithm/compress/2018-11-09-althgorim-compress-04-apache-compress-notes.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Compress Althgorim-04-Common Compress 通用笔记"}],["meta",{"property":"og:description","content":"存档和压缩器 Commons Compress调用压缩单个数据压缩器格式流的所有格式，而在单个（可能压缩的）存档中收集多个条目的所有格式都是归档格式。 支持的压缩器格式有gzip，bzip2，xz，lzma，Pack200，DEFLATE，Brotli，DEFLATE64，ZStandard和Z。 归档格式为7z，ar，arj，cpio，dump，ta..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-23T04:59:26.000Z"}],["meta",{"property":"article:tag","content":"althgorim"}],["meta",{"property":"article:tag","content":"compress"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-11-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-23T04:59:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Compress Althgorim-04-Common Compress 通用笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-11-09T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-23T04:59:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755925166000,"updatedTime":1755925166000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":2.04,"words":613},"filePathRelative":"posts/algorithm/compress/2018-11-09-althgorim-compress-04-apache-compress-notes.md","localizedDate":"2018年11月9日","excerpt":"\\n<p>Commons Compress调用压缩单个数据压缩器格式流的所有格式，而在单个（可能压缩的）存档中收集多个条目的所有格式都是归档格式。</p>\\n<p>支持的压缩器格式有gzip，bzip2，xz，lzma，Pack200，DEFLATE，Brotli，DEFLATE64，ZStandard和Z。</p>\\n<p>归档格式为7z，ar，arj，cpio，dump，tar和zip。</p>\\n<p>Pack200是一种特殊情况，因为它只能压缩JAR文件。</p>\\n<p>我们目前只为arj，dump，Brotli，DEFLATE64和Z提供读取支持.arj只能读取未压缩的档案，7z可以读取具有7z支持的许多压缩和加密算法的档案，但在编写档案时不支持加密。</p>","autoDesc":true}');export{l as comp,m as data};
