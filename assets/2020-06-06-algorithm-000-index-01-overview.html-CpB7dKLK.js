import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,o}from"./app-CPxlYypv.js";const n={};function s(h,e){return o(),a("div",null,e[0]||(e[0]=[t(`<h1 id="算法索引" tabindex="-1"><a class="header-anchor" href="#算法索引"><span>算法索引</span></a></h1><h2 id="查找" tabindex="-1"><a class="header-anchor" href="#查找"><span>查找</span></a></h2><p><a href="https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-01-intro-what" target="_blank" rel="noopener noreferrer">二分查找法？binary-search-01-基本概念介绍</a></p><p><a href="https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-02-leetcode-01-T704" target="_blank" rel="noopener noreferrer">二分查找法？binary-search-02-leetcode 704 二分查找目标值是否存在</a></p><p><a href="https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-02-leetcode-02-T035" target="_blank" rel="noopener noreferrer">二分查找法？binary-search-02-leetcode 35. 搜索插入位置</a></p><p><a href="https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-02-leetcode-03-T034" target="_blank" rel="noopener noreferrer">二分查找法？binary-search-02-leetcode 34. 在排序数组中查找元素的第一个和最后一个位置</a></p><p><a href="https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-02-leetcode-04-T852" target="_blank" rel="noopener noreferrer">二分查找法？binary-search-02-leetcode 852. 山脉数组的峰顶索引</a></p><p><a href="https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-02-leetcode-05-T875" target="_blank" rel="noopener noreferrer">二分查找法？binary-search-02-leetcode 875. 爱吃香蕉的珂珂</a></p><p><a href="https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-02-leetcode-06-T1011" target="_blank" rel="noopener noreferrer">二分查找法？binary-search-02-leetcode 1011. 在 D 天内送达包裹的能力</a></p><p><a href="https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-02-leetcode-07-T033" target="_blank" rel="noopener noreferrer">二分查找法？binary-search-02-leetcode 033. 搜索旋转排序数组</a></p><p><a href="https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-02-leetcode-08-T153" target="_blank" rel="noopener noreferrer">二分查找法？binary-search-02-leetcode 153. 寻找旋转排序数组中的最小值</a></p><p><a href="https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-02-leetcode-09-T154" target="_blank" rel="noopener noreferrer">二分查找法？binary-search-02-leetcode 154. 寻找旋转排序数组中的最小值 II</a></p><h2 id="sort" tabindex="-1"><a class="header-anchor" href="#sort"><span>sort</span></a></h2><blockquote><p><a href="https://github.com/houbb/sort" target="_blank" rel="noopener noreferrer">The sort tool for java.(java 排序工具)</a></p></blockquote><p><a href="https://houbb.github.io/2016/07/14/sort-00-overview-sort" target="_blank" rel="noopener noreferrer">sort-00-排序算法汇总</a></p><p><a href="https://houbb.github.io/2016/07/14/sort-01-bubble-sort" target="_blank" rel="noopener noreferrer">sort-01-bubble sort 冒泡排序算法详解</a></p><p><a href="https://houbb.github.io/2016/07/14/sort-02-quick-sort" target="_blank" rel="noopener noreferrer">sort-02-QuickSort 快速排序到底快在哪里？</a></p><p><a href="https://houbb.github.io/2016/07/14/sort-03-select-sort" target="_blank" rel="noopener noreferrer">sort-03-SelectSort 选择排序算法详解</a></p><p><a href="https://houbb.github.io/2016/07/14/sort-03-select-sort" target="_blank" rel="noopener noreferrer">sort-04-heap sort 堆排序算法详解</a></p><p><a href="https://houbb.github.io/2016/07/14/sort-05-insert-sort" target="_blank" rel="noopener noreferrer">sort-05-insert sort 插入排序算法详解</a></p><p><a href="https://houbb.github.io/2016/07/14/sort-06-shell-sort" target="_blank" rel="noopener noreferrer">sort-06-shell sort 希尔排序算法详解</a></p><p><a href="https://houbb.github.io/2016/07/14/sort-07-merge-sort" target="_blank" rel="noopener noreferrer">sort-07-merge sort 归并排序</a></p><p><a href="https://houbb.github.io/2016/07/14/sort-08-counting-sort" target="_blank" rel="noopener noreferrer">sort-08-counting sort 计数排序</a></p><p><a href="https://houbb.github.io/2016/07/14/sort-09-bucket-sort" target="_blank" rel="noopener noreferrer">sort-08-bucket sort 桶排序</a></p><p><a href="https://houbb.github.io/2018/07/26/timesort" target="_blank" rel="noopener noreferrer">timesort</a></p><p><a href="https://houbb.github.io/2022/08/12/java-diff-sort-big-file" target="_blank" rel="noopener noreferrer">java big file sort 超大文件如何实现排序？外归并排序（External merge sort）</a></p><h2 id="五大算法" tabindex="-1"><a class="header-anchor" href="#五大算法"><span>五大算法</span></a></h2><p><a href="https://houbb.github.io/2020/01/23/data-struct-learn-07-base" target="_blank" rel="noopener noreferrer">五大基本算法概览</a></p><p><a href="https://houbb.github.io/2020/01/23/data-struct-learn-07-base-backtracking" target="_blank" rel="noopener noreferrer">五大基本算法之回溯算法 backtracking</a></p><p><a href="https://houbb.github.io/2020/01/23/data-struct-learn-07-base-divided" target="_blank" rel="noopener noreferrer">五大基本算法之分治算法 Divided</a></p><p><a href="https://houbb.github.io/2020/01/23/data-struct-learn-07-base-dp" target="_blank" rel="noopener noreferrer">五大基本算法之动态规划算法 DP dynamic programming</a></p><p><a href="https://houbb.github.io/2020/01/23/data-struct-learn-07-base-enum" target="_blank" rel="noopener noreferrer">五大基本算法之穷举算法</a></p><p><a href="https://houbb.github.io/2020/01/23/data-struct-learn-07-base-greedy" target="_blank" rel="noopener noreferrer">五大基本算法之贪心算法 Greedy</a></p><h1 id="绝世武功" tabindex="-1"><a class="header-anchor" href="#绝世武功"><span>绝世武功</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>韦小宝：“就这样去，会不会太危险了？ ”</span></span>
<span class="line"><span>陈近南：“不会，因为我可以教你绝世武功啊！ ”</span></span>
<span class="line"><span>说着从袖子里面拿出一本书，上书“绝世武功”四个大字 </span></span>
<span class="line"><span>韦小宝：“真的是绝世武功！ ”</span></span>
<span class="line"><span>陈近南：“这本不过是绝世武功的目录，那些才是绝世武功的秘籍。”</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h1><p>C 更加接近于底层，建议数据结构使用 C 的形式。</p><p>同时写一份 java 实现。</p><p>算法使用 java 实现。</p><p>数据结构与算法二者分开，整理为工具包。</p><h1 id="学习方式" tabindex="-1"><a class="header-anchor" href="#学习方式"><span>学习方式</span></a></h1><p>兼听则明，偏听则暗。</p><p>学习的时候以一本书为主，多本书为辅助。</p><p>协助查询一点资料。</p><h1 id="实战" tabindex="-1"><a class="header-anchor" href="#实战"><span>实战</span></a></h1><p>可以刷一遍 leetcode 算法题。</p><p>省的每次都被无聊的算法面试恶心到。</p><p>也提升自己的基本功，便于工具框架的编写。</p><h1 id="书籍" tabindex="-1"><a class="header-anchor" href="#书籍"><span>书籍</span></a></h1><p>《大话数据结构》</p><p>《啊哈！算法》</p><p>《算法之道》</p><p>《算法导论_第三版》</p><p>《数据结构与算法分析：C语言描述+中文版》</p><p>《C++数据结构与算法 第4版》</p><p>《图灵程序设计丛书 算法 第4版》</p><h1 id="后续" tabindex="-1"><a class="header-anchor" href="#后续"><span>后续</span></a></h1><p>《数学之美》</p><p>《演化程序 遗传算法和数据编码的结合》</p><p>《遗传算法与工程优化》</p><p>《数据挖掘十大算法》</p><p>《机器学习算法原理与编程实践》</p><p>高德纳</p><h1 id="刷题的系列" tabindex="-1"><a class="header-anchor" href="#刷题的系列"><span>刷题的系列</span></a></h1><p>leetcode 的题目，</p><p>基本包含 《剑指 offer》</p><p>《编程之美》</p><p>《算法导论》</p><h1 id="为什么写这个系列" tabindex="-1"><a class="header-anchor" href="#为什么写这个系列"><span>为什么写这个系列</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>数据结构 = 算法 + 数据结构</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其他的只是一些业务上的知识，比较好学习。</p><p>算法算是几百年来，所有科研人员的智慧结晶。值得一次次地学习。</p><p>一切的基础，应该从这里开始。</p><p><strong>千里之行，始于足下。</strong></p>`,74)]))}const l=r(n,[["render",s]]),b=JSON.parse('{"path":"/posts/leetcode/index/2020-06-06-algorithm-000-index-01-overview.html","title":"从零开始的数据结构与算法-00-概览 算法专题汇总","lang":"zh-CN","frontmatter":{"title":"从零开始的数据结构与算法-00-概览 算法专题汇总","date":"2020-06-08T00:00:00.000Z","categories":["Index"],"tags":["index"],"published":true,"description":"算法索引 查找 二分查找法？binary-search-01-基本概念介绍 二分查找法？binary-search-02-leetcode 704 二分查找目标值是否存在 二分查找法？binary-search-02-leetcode 35. 搜索插入位置 二分查找法？binary-search-02-leetcode 34. 在排序数组中查找元素的第...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/leetcode-notes/posts/leetcode/index/2020-06-06-algorithm-000-index-01-overview.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"从零开始的数据结构与算法-00-概览 算法专题汇总"}],["meta",{"property":"og:description","content":"算法索引 查找 二分查找法？binary-search-01-基本概念介绍 二分查找法？binary-search-02-leetcode 704 二分查找目标值是否存在 二分查找法？binary-search-02-leetcode 35. 搜索插入位置 二分查找法？binary-search-02-leetcode 34. 在排序数组中查找元素的第..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-18T03:07:34.000Z"}],["meta",{"property":"article:tag","content":"index"}],["meta",{"property":"article:published_time","content":"2020-06-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-18T03:07:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"从零开始的数据结构与算法-00-概览 算法专题汇总\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-08T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-18T03:07:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755499309000,"updatedTime":1758164854000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":3},{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":3.86,"words":1159},"filePathRelative":"posts/leetcode/index/2020-06-06-algorithm-000-index-01-overview.md","localizedDate":"2020年6月8日","excerpt":"\\n<h2>查找</h2>\\n<p><a href=\\"https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-01-intro-what\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">二分查找法？binary-search-01-基本概念介绍</a></p>\\n<p><a href=\\"https://houbb.github.io/2020/06/08/algorithm-000-leetcode-data-struct-001-search-00-binary-search-02-leetcode-01-T704\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">二分查找法？binary-search-02-leetcode 704 二分查找目标值是否存在</a></p>","autoDesc":true}');export{l as comp,b as data};
