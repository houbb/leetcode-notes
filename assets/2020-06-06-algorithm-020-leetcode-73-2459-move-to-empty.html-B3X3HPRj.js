import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as o,o as r}from"./app-DBrlZJhV.js";const p={};function m(a,e){return r(),n("div",null,e[0]||(e[0]=[o('<h1 id="题目" tabindex="-1"><a class="header-anchor" href="#题目"><span>题目</span></a></h1><p>给定一个大小为 n 的整数数组 nums，其中包含从 0 到 n - 1 (包含边界) 的 每个 元素。</p><p>从 1 到 n - 1 的每一个元素都代表一项目，元素 0 代表一个空白区域。</p><p>在一个操作中，您可以将 任何 项目移动到空白区域。如果所有项目的编号都是 升序 的，并且空格在数组的开头或结尾，则认为 nums 已排序。</p><p>例如，如果 n = 4，则 nums 按以下条件排序:</p><p>nums = [0,1,2,3] 或<br> nums = [1,2,3,0]</p><p>...否则被认为是无序的。</p><p>返回排序 nums 所需的最小操作数。</p><p>示例 1:</p><p>输入: nums = [4,2,0,3,1]<br> 输出: 3<br> 解释:</p><ul><li>将项目 2 移动到空白区域。现在，nums =[4,0,2,3,1]。</li><li>将项目 1 移动到空白区域。现在，nums =[4,1,2,3,0]。</li><li>将项目 4 移动到空白区域。现在，nums =[0,1,2,3,4]。<br> 可以证明，3 是所需的最小操作数。<br> 示例 2:</li></ul><p>输入: nums = [1,2,3,4,0]<br> 输出: 0<br> 解释: nums 已经排序了，所以返回 0。<br> 示例 3:</p><p>输入: nums = [1,0,2,4,3]<br> 输出: 2<br> 解释:</p><ul><li>将项目 2 移动到空白区域。现在，nums =[1,2,0,4,3]。</li><li>将项目 3 移动到空白区域。现在，nums =[1,2,3,4,0]。<br> 可以证明，2 是所需的最小操作数。</li></ul><p>提示:</p><p>n == nums.length<br> 2 &lt;= n &lt;= 105<br> 0 &lt;= nums[i] &lt; n<br> nums 的所有值都是 唯一 的。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://leetcode.cn/problems/house-robber/description/?envType=problem-list-v2&amp;envId=dynamic-programming" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/house-robber/description/?envType=problem-list-v2&amp;envId=dynamic-programming</a></p>',18)]))}const l=t(p,[["render",m]]),c=JSON.parse('{"path":"/posts/leetcode/history1/2020-06-06-algorithm-020-leetcode-73-2459-move-to-empty.html","title":"73-greedy 2459. 通过移动项目到空白区域来排序数组","lang":"zh-CN","frontmatter":{"title":"73-greedy 2459. 通过移动项目到空白区域来排序数组","date":"2020-06-08T00:00:00.000Z","categories":["Algorithm"],"tags":["algorithm","greedy","leetcode"],"published":true,"description":"题目 给定一个大小为 n 的整数数组 nums，其中包含从 0 到 n - 1 (包含边界) 的 每个 元素。 从 1 到 n - 1 的每一个元素都代表一项目，元素 0 代表一个空白区域。 在一个操作中，您可以将 任何 项目移动到空白区域。如果所有项目的编号都是 升序 的，并且空格在数组的开头或结尾，则认为 nums 已排序。 例如，如果 n = 4...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/leetcode-notes/posts/leetcode/history1/2020-06-06-algorithm-020-leetcode-73-2459-move-to-empty.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"73-greedy 2459. 通过移动项目到空白区域来排序数组"}],["meta",{"property":"og:description","content":"题目 给定一个大小为 n 的整数数组 nums，其中包含从 0 到 n - 1 (包含边界) 的 每个 元素。 从 1 到 n - 1 的每一个元素都代表一项目，元素 0 代表一个空白区域。 在一个操作中，您可以将 任何 项目移动到空白区域。如果所有项目的编号都是 升序 的，并且空格在数组的开头或结尾，则认为 nums 已排序。 例如，如果 n = 4..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T12:19:07.000Z"}],["meta",{"property":"article:tag","content":"algorithm"}],["meta",{"property":"article:tag","content":"greedy"}],["meta",{"property":"article:tag","content":"leetcode"}],["meta",{"property":"article:published_time","content":"2020-06-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T12:19:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"73-greedy 2459. 通过移动项目到空白区域来排序数组\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-08T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T12:19:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755499309000,"updatedTime":1755865147000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":2},{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":2,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":1.38,"words":415},"filePathRelative":"posts/leetcode/history1/2020-06-06-algorithm-020-leetcode-73-2459-move-to-empty.md","localizedDate":"2020年6月8日","excerpt":"\\n<p>给定一个大小为 n 的整数数组 nums，其中包含从 0 到 n - 1 (包含边界) 的 每个 元素。</p>\\n<p>从 1 到 n - 1 的每一个元素都代表一项目，元素 0 代表一个空白区域。</p>\\n<p>在一个操作中，您可以将 任何 项目移动到空白区域。如果所有项目的编号都是 升序 的，并且空格在数组的开头或结尾，则认为 nums 已排序。</p>\\n<p>例如，如果 n = 4，则 nums 按以下条件排序:</p>\\n<p>nums = [0,1,2,3] 或<br>\\nnums = [1,2,3,0]</p>\\n<p>...否则被认为是无序的。</p>\\n<p>返回排序 nums 所需的最小操作数。</p>","autoDesc":true}');export{l as comp,c as data};
